/*
   Copyright (c) 2024 - 2025 Sibi Siddharthan

   Distributed under the MIT license.
   Refer to the LICENSE file at the root directory for details.
*/

#ifndef SPGP_ERROR_H
#define SPGP_ERROR_H

typedef enum _pgp_error_t
{
	// No error
	PGP_NO_ERROR = 0,

	// General errors
	PGP_NO_MEMORY,
	PGP_INSUFFICIENT_DATA,
	PGP_INVALID_PARAMETER,
	PGP_INVALID_HEADER_FORMAT,
	PGP_INCORRECT_FUNCTION,

	// Cryptographic errors
	PGP_RAND_ERROR,
	PGP_INVALID_CIPHER_ALGORITHM,
	PGP_INVALID_AEAD_ALGORITHM,
	PGP_INVALID_AEAD_CIPHER_PAIR,

	// S2K errors
	PGP_INVALID_S2K_SPECIFIER,

	// Key errors
	PGP_INVALID_KEY_VERSION,

	// Session errors
	PGP_INVALID_SYMMETRIC_SESSION_PACKET_VERSION,
	PGP_MALFORMED_SYMMETRIC_SESSION_PACKET,

	// Compressed Packet
	PGP_UNSUPPORTED_COMPRESSION_ALGORITHM,
	PGP_UNKNOWN_COMPRESSION_ALGORITHM,
	PGP_MALFORMED_COMPRESSED_PACKET,

	// Marker Packet
	PGP_MALFORMED_MARKER_PACKET,

	// MDC Packet
	PGP_MALFORMED_MDC_PACKET,

	// Literal Packet
	PGP_UNKNOWN_LITERAL_FORMAT,
	PGP_MALFORMED_LITERAL_PACKET,
	PGP_LITERAL_PACKET_INVALID_FILENAME_SIZE,
	PGP_LITERAL_PACKET_INVALID_DATA_SIZE,

	// User ID Packet
	PGP_INVALID_USER_ID,
	PGP_EMPTY_USER_ID,

	// Trust Packet
	PGP_INVALID_TRUST_LEVEL,
	PGP_MALFORMED_TRUST_PACKET,

	// Padding Packet
	PGP_EMPTY_PADDING_PACKET,

	// Keyring Packet
	PGP_MALFORMED_KEYRING_PACKET,
	PGP_MALFORMED_KEYRING_PRIMARY_KEY,
	PGP_MALFORMED_KEYRING_SUBKEYS,
	PGP_KEYRING_PACKET_INVALID_SUBKEY_SIZE,
	PGP_KEYRING_PACKET_INVALID_UID_SIZE,

} pgp_error_t;

#endif
