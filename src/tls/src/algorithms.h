/*
   Copyright (c) 2024 - 2025 Sibi Siddharthan

   Distributed under the MIT license.
   Refer to the LICENSE file at the root directory for details.
*/

#ifndef TLS_ALGORITHMS_H
#define TLS_ALGORITHMS_H

#include <stdint.h>

#define TLS_MAKE_CIPHER_SUITE(A, B) (((uint16_t)(A)) << 8 + ((uint16_t)(B)))

typedef enum _tls_cipher_suite
{
	TLS_NULL_WITH_NULL_NULL = TLS_MAKE_CIPHER_SUITE(0x00, 0x00),

	TLS_RSA_WITH_NULL_MD5 = TLS_MAKE_CIPHER_SUITE(0x00, 0x01),
	TLS_RSA_WITH_NULL_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x02),
	TLS_RSA_WITH_NULL_SHA256 = TLS_MAKE_CIPHER_SUITE(0x00, 0x3B),
	TLS_RSA_WITH_RC4_128_MD5 = TLS_MAKE_CIPHER_SUITE(0x00, 0x04),
	TLS_RSA_WITH_RC4_128_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x05),
	TLS_RSA_WITH_IDEA_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x07),
	TLS_RSA_WITH_DES_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x09),
	TLS_RSA_WITH_3DES_EDE_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x0A),
	TLS_RSA_WITH_AES_128_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x2F),
	TLS_RSA_WITH_AES_256_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x35),
	TLS_RSA_WITH_AES_128_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0x00, 0x3C),
	TLS_RSA_WITH_AES_256_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0x00, 0x3D),

	TLS_DH_DSS_WITH_DES_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x0C),
	TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x0D),
	TLS_DH_RSA_WITH_DES_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x0F),
	TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x10),
	TLS_DHE_DSS_WITH_DES_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x12),
	TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x13),
	TLS_DHE_RSA_WITH_DES_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x15),
	TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x16),
	TLS_DH_DSS_WITH_AES_128_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x30),
	TLS_DH_RSA_WITH_AES_128_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x31),
	TLS_DHE_DSS_WITH_AES_128_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x32),
	TLS_DHE_RSA_WITH_AES_128_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x33),
	TLS_DH_DSS_WITH_AES_256_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x36),
	TLS_DH_RSA_WITH_AES_256_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x37),
	TLS_DHE_DSS_WITH_AES_256_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x38),
	TLS_DHE_RSA_WITH_AES_256_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x39),
	TLS_DH_DSS_WITH_AES_128_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0x00, 0x3E),
	TLS_DH_RSA_WITH_AES_128_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0x00, 0x3F),
	TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0x00, 0x40),
	TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0x00, 0x67),
	TLS_DH_DSS_WITH_AES_256_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0x00, 0x68),
	TLS_DH_RSA_WITH_AES_256_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0x00, 0x69),
	TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0x00, 0x6A),
	TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0x00, 0x6B),

	TLS_DH_anon_WITH_RC4_128_MD5 = TLS_MAKE_CIPHER_SUITE(0x00, 0x18),
	TLS_DH_anon_WITH_DES_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x1A),
	TLS_DH_anon_WITH_3DES_EDE_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x1B),
	TLS_DH_anon_WITH_AES_128_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x34),
	TLS_DH_anon_WITH_AES_256_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x3A),
	TLS_DH_anon_WITH_AES_128_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0x00, 0x6C),
	TLS_DH_anon_WITH_AES_256_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0x00, 0x6D),

} tls_cipher_suite;

#endif
