/*
   Copyright (c) 2024 - 2025 Sibi Siddharthan

   Distributed under the MIT license.
   Refer to the LICENSE file at the root directory for details.
*/

#ifndef TLS_ALGORITHMS_H
#define TLS_ALGORITHMS_H

#include <stdint.h>

#define TLS_MAKE_CIPHER_SUITE(A, B) (((uint16_t)(A)) << 8 + ((uint16_t)(B)))

typedef enum _tls_cipher_suite
{
	// RFC 5246: The Transport Layer Security (TLS) Protocol Version 1.2
	TLS_NULL_WITH_NULL_NULL = TLS_MAKE_CIPHER_SUITE(0x00, 0x00),

	TLS_RSA_WITH_NULL_MD5 = TLS_MAKE_CIPHER_SUITE(0x00, 0x01),
	TLS_RSA_WITH_NULL_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x02),
	TLS_RSA_WITH_NULL_SHA256 = TLS_MAKE_CIPHER_SUITE(0x00, 0x3B),
	TLS_RSA_WITH_RC4_128_MD5 = TLS_MAKE_CIPHER_SUITE(0x00, 0x04),
	TLS_RSA_WITH_RC4_128_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x05),
	TLS_RSA_WITH_IDEA_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x07),
	TLS_RSA_WITH_DES_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x09),
	TLS_RSA_WITH_3DES_EDE_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x0A),
	TLS_RSA_WITH_AES_128_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x2F),
	TLS_RSA_WITH_AES_256_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x35),
	TLS_RSA_WITH_AES_128_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0x00, 0x3C),
	TLS_RSA_WITH_AES_256_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0x00, 0x3D),

	TLS_DH_DSS_WITH_DES_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x0C),
	TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x0D),
	TLS_DH_RSA_WITH_DES_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x0F),
	TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x10),
	TLS_DHE_DSS_WITH_DES_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x12),
	TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x13),
	TLS_DHE_RSA_WITH_DES_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x15),
	TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x16),
	TLS_DH_DSS_WITH_AES_128_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x30),
	TLS_DH_RSA_WITH_AES_128_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x31),
	TLS_DHE_DSS_WITH_AES_128_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x32),
	TLS_DHE_RSA_WITH_AES_128_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x33),
	TLS_DH_DSS_WITH_AES_256_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x36),
	TLS_DH_RSA_WITH_AES_256_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x37),
	TLS_DHE_DSS_WITH_AES_256_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x38),
	TLS_DHE_RSA_WITH_AES_256_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x39),
	TLS_DH_DSS_WITH_AES_128_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0x00, 0x3E),
	TLS_DH_RSA_WITH_AES_128_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0x00, 0x3F),
	TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0x00, 0x40),
	TLS_DHE_RSA_WITH_AES_128_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0x00, 0x67),
	TLS_DH_DSS_WITH_AES_256_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0x00, 0x68),
	TLS_DH_RSA_WITH_AES_256_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0x00, 0x69),
	TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0x00, 0x6A),
	TLS_DHE_RSA_WITH_AES_256_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0x00, 0x6B),

	TLS_DH_ANON_WITH_RC4_128_MD5 = TLS_MAKE_CIPHER_SUITE(0x00, 0x18),
	TLS_DH_ANON_WITH_DES_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x1A),
	TLS_DH_ANON_WITH_3DES_EDE_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x1B),
	TLS_DH_ANON_WITH_AES_128_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x34),
	TLS_DH_ANON_WITH_AES_256_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0x00, 0x3A),
	TLS_DH_ANON_WITH_AES_128_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0x00, 0x6C),
	TLS_DH_ANON_WITH_AES_256_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0x00, 0x6D),

	// RFC 8998: ShangMi (SM) Cipher Suites for TLS 1.3
	TLS_SM4_GCM_SM3 = TLS_MAKE_CIPHER_SUITE(0x00, 0xC6),
	TLS_SM4_CCM_SM3 = TLS_MAKE_CIPHER_SUITE(0x00, 0xC7),

	// RFC 8446: The Transport Layer Security (TLS) Protocol Version 1.3
	TLS_AES_128_GCM_SHA256 = TLS_MAKE_CIPHER_SUITE(0x13, 0x01),
	TLS_AES_256_GCM_SHA384 = TLS_MAKE_CIPHER_SUITE(0x13, 0x02),
	TLS_CHACHA20_POLY1305_SHA256 = TLS_MAKE_CIPHER_SUITE(0x13, 0x03),
	TLS_AES_128_CCM_SHA256 = TLS_MAKE_CIPHER_SUITE(0x13, 0x04),
	TLS_AES_128_CCM_8_SHA256 = TLS_MAKE_CIPHER_SUITE(0x13, 0x05),

	// RFC 8422:  Elliptic Curve Cryptography (ECC) Cipher Suites for Transport Layer Security (TLS) Versions 1.2 and Earlier
	TLS_ECDHE_ECDSA_WITH_NULL_SHA = TLS_MAKE_CIPHER_SUITE(0xC0, 0x06),
	TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0xC0, 0x08),
	TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0xC0, 0x09),
	TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0xC0, 0x0A),

	TLS_ECDHE_RSA_WITH_NULL_SHA = TLS_MAKE_CIPHER_SUITE(0xC0, 0x10),
	TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0xC0, 0x12),
	TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0xC0, 0x13),
	TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0xC0, 0x14),

	TLS_ECDH_ANON_WITH_NULL_SHA = TLS_MAKE_CIPHER_SUITE(0xC0, 0x15),
	TLS_ECDH_ANON_WITH_3DES_EDE_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0xC0, 0x17),
	TLS_ECDH_ANON_WITH_AES_128_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0xC0, 0x18),
	TLS_ECDH_ANON_WITH_AES_256_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0xC0, 0x19),

	// RFC 5289: TLS Elliptic Curve Cipher Suites with SHA-256/384 and AES Galois Counter Mode (GCM)
	TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x23),
	TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x24),
	TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x25),
	TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x26),
	TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x27),
	TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x28),
	TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x29),
	TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x2A),

	TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x2B),
	TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x2C),
	TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x2D),
	TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x2E),
	TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x2F),
	TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x30),
	TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x31),
	TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x32),

	// RFC 5489: ECDHE_PSK Cipher Suites for Transport Layer Security (TLS)
	TLS_ECDHE_PSK_WITH_RC4_128_SHA = TLS_MAKE_CIPHER_SUITE(0xC0, 0x33),
	TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0xC0, 0x34),
	TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0xC0, 0x35),
	TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA = TLS_MAKE_CIPHER_SUITE(0xC0, 0x36),
	TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x37),
	TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x38),
	TLS_ECDHE_PSK_WITH_NULL_SHA = TLS_MAKE_CIPHER_SUITE(0xC0, 0x39),
	TLS_ECDHE_PSK_WITH_NULL_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x3A),
	TLS_ECDHE_PSK_WITH_NULL_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x3B),

	// RFC 6209: Addition of the ARIA Cipher Suites to Transport Layer Security (TLS)
	TLS_RSA_WITH_ARIA_128_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x3C),
	TLS_RSA_WITH_ARIA_256_CBC_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x3D),
	TLS_DH_DSS_WITH_ARIA_128_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x3E),
	TLS_DH_DSS_WITH_ARIA_256_CBC_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x3F),
	TLS_DH_RSA_WITH_ARIA_128_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x40),
	TLS_DH_RSA_WITH_ARIA_256_CBC_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x41),
	TLS_DHE_DSS_WITH_ARIA_128_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x42),
	TLS_DHE_DSS_WITH_ARIA_256_CBC_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x43),
	TLS_DHE_RSA_WITH_ARIA_128_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x44),
	TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x45),
	TLS_DH_ANON_WITH_ARIA_128_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x46),
	TLS_DH_ANON_WITH_ARIA_256_CBC_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x47),

	TLS_ECDHE_ECDSA_WITH_ARIA_128_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x48),
	TLS_ECDHE_ECDSA_WITH_ARIA_256_CBC_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x49),
	TLS_ECDH_ECDSA_WITH_ARIA_128_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x4A),
	TLS_ECDH_ECDSA_WITH_ARIA_256_CBC_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x4B),
	TLS_ECDHE_RSA_WITH_ARIA_128_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x4C),
	TLS_ECDHE_RSA_WITH_ARIA_256_CBC_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x4D),
	TLS_ECDH_RSA_WITH_ARIA_128_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x4E),
	TLS_ECDH_RSA_WITH_ARIA_256_CBC_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x4F),

	TLS_RSA_WITH_ARIA_128_GCM_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x50),
	TLS_RSA_WITH_ARIA_256_GCM_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x51),
	TLS_DHE_RSA_WITH_ARIA_128_GCM_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x52),
	TLS_DHE_RSA_WITH_ARIA_256_GCM_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x53),
	TLS_DH_RSA_WITH_ARIA_128_GCM_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x54),
	TLS_DH_RSA_WITH_ARIA_256_GCM_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x55),
	TLS_DHE_DSS_WITH_ARIA_128_GCM_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x56),
	TLS_DHE_DSS_WITH_ARIA_256_GCM_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x57),
	TLS_DH_DSS_WITH_ARIA_128_GCM_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x58),
	TLS_DH_DSS_WITH_ARIA_256_GCM_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x59),
	TLS_DH_ANON_WITH_ARIA_128_GCM_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x5A),
	TLS_DH_ANON_WITH_ARIA_256_GCM_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x5B),

	TLS_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x5C),
	TLS_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x5D),
	TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x5E),
	TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x5F),
	TLS_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x60),
	TLS_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x61),
	TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x62),
	TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x63),

	TLS_PSK_WITH_ARIA_128_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x64),
	TLS_PSK_WITH_ARIA_256_CBC_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x65),
	TLS_DHE_PSK_WITH_ARIA_128_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x66),
	TLS_DHE_PSK_WITH_ARIA_256_CBC_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x67),
	TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x68),
	TLS_RSA_PSK_WITH_ARIA_256_CBC_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x69),
	TLS_PSK_WITH_ARIA_128_GCM_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x6A),
	TLS_PSK_WITH_ARIA_256_GCM_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x6B),
	TLS_DHE_PSK_WITH_ARIA_128_GCM_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x6C),
	TLS_DHE_PSK_WITH_ARIA_256_GCM_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x6D),
	TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x6E),
	TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x6F),
	TLS_ECDHE_PSK_WITH_ARIA_128_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x70),
	TLS_ECDHE_PSK_WITH_ARIA_256_CBC_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x71),

	// RFC 6367:   Addition of the Camellia Cipher Suites to Transport Layer Security (TLS)
	TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x72),
	TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x73),
	TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x74),
	TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x75),
	TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x76),
	TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x77),
	TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x78),
	TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x79),

	TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x7A),
	TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x7B),
	TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x7C),
	TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x7D),
	TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x7E),
	TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x7F),
	TLS_DHE_DSS_WITH_CAMELLIA_128_GCM_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x80),
	TLS_DHE_DSS_WITH_CAMELLIA_256_GCM_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x81),
	TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x82),
	TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x83),
	TLS_DH_ANON_WITH_CAMELLIA_128_GCM_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x84),
	TLS_DH_ANON_WITH_CAMELLIA_256_GCM_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x85),
	TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x86),
	TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x87),
	TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x88),
	TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x89),
	TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x8A),
	TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x8B),
	TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x8C),
	TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x8D),

	TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x8D),
	TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x8F),
	TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x90),
	TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x91),
	TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x92),
	TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x93),
	TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x94),
	TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x95),
	TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x96),
	TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x97),
	TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x98),
	TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x99),
	TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x9A),
	TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384 = TLS_MAKE_CIPHER_SUITE(0xC0, 0x9B),

	// RFC 6655: AES-CCM Cipher Suites for Transport Layer Security (TLS)
	TLS_RSA_WITH_AES_128_CCM = TLS_MAKE_CIPHER_SUITE(0xC0, 0x9C),
	TLS_RSA_WITH_AES_256_CCM = TLS_MAKE_CIPHER_SUITE(0xC0, 0x9D),
	TLS_DHE_RSA_WITH_AES_128_CCM = TLS_MAKE_CIPHER_SUITE(0xC0, 0x9E),
	TLS_DHE_RSA_WITH_AES_256_CCM = TLS_MAKE_CIPHER_SUITE(0xC0, 0x9F),
	TLS_RSA_WITH_AES_128_CCM_8 = TLS_MAKE_CIPHER_SUITE(0xC0, 0xA0),
	TLS_RSA_WITH_AES_256_CCM_8 = TLS_MAKE_CIPHER_SUITE(0xC0, 0xA1),
	TLS_DHE_RSA_WITH_AES_128_CCM_8 = TLS_MAKE_CIPHER_SUITE(0xC0, 0xA2),
	TLS_DHE_RSA_WITH_AES_256_CCM_8 = TLS_MAKE_CIPHER_SUITE(0xC0, 0xA3),

	TLS_PSK_WITH_AES_128_CCM = TLS_MAKE_CIPHER_SUITE(0xC0, 0xA4),
	TLS_PSK_WITH_AES_256_CCM = TLS_MAKE_CIPHER_SUITE(0xC0, 0xA5),
	TLS_DHE_PSK_WITH_AES_128_CCM = TLS_MAKE_CIPHER_SUITE(0xC0, 0xA6),
	TLS_DHE_PSK_WITH_AES_256_CCM = TLS_MAKE_CIPHER_SUITE(0xC0, 0xA7),
	TLS_PSK_WITH_AES_128_CCM_8 = TLS_MAKE_CIPHER_SUITE(0xC0, 0xA8),
	TLS_PSK_WITH_AES_256_CCM_8 = TLS_MAKE_CIPHER_SUITE(0xC0, 0xA9),
	TLS_PSK_DHE_WITH_AES_128_CCM_8 = TLS_MAKE_CIPHER_SUITE(0xC0, 0xAA),
	TLS_PSK_DHE_WITH_AES_256_CCM_8 = TLS_MAKE_CIPHER_SUITE(0xC0, 0xAB),

	// RFC 9189: GOST Cipher Suites for Transport Layer Security (TLS) Protocol Version 1.2
	TLS_GOST_R341112_256_WITH_KUZNYECHIK_CTR_OMAC = TLS_MAKE_CIPHER_SUITE(0xC1, 0x00),
	TLS_GOST_R341112_256_WITH_MAGMA_CTR_OMAC = TLS_MAKE_CIPHER_SUITE(0xC1, 0x01),
	TLS_GOST_R341112_256_WITH_28147_CNT_IMIT = TLS_MAKE_CIPHER_SUITE(0xC1, 0x02),
	TLS_GOST_R341112_256_WITH_KUZNYECHIK_MGM_LIGHT = TLS_MAKE_CIPHER_SUITE(0xC1, 0x03),
	TLS_GOST_R341112_256_WITH_MAGMA_MGM_LIGHT = TLS_MAKE_CIPHER_SUITE(0xC1, 0x04),
	TLS_GOST_R341112_256_WITH_KUZNYECHIK_MGM_STRONG = TLS_MAKE_CIPHER_SUITE(0xC1, 0x05),
	TLS_GOST_R341112_256_WITH_MAGMA_MGM_STRONG = TLS_MAKE_CIPHER_SUITE(0xC1, 0x06),

	// RFC 7905: ChaCha20-Poly1305 Cipher Suites for Transport Layer Security (TLS)
	TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 = TLS_MAKE_CIPHER_SUITE(0xCC, 0xA8),
	TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 = TLS_MAKE_CIPHER_SUITE(0xCC, 0xA9),
	TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256 = TLS_MAKE_CIPHER_SUITE(0xCC, 0xAA),

	TLS_PSK_WITH_CHACHA20_POLY1305_SHA256 = TLS_MAKE_CIPHER_SUITE(0xCC, 0xAB),
	TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256 = TLS_MAKE_CIPHER_SUITE(0xCC, 0xAC),
	TLS_DHE_PSK_WITH_CHACHA20_POLY1305_SHA256 = TLS_MAKE_CIPHER_SUITE(0xCC, 0xAD),
	TLS_RSA_PSK_WITH_CHACHA20_POLY1305_SHA256 = TLS_MAKE_CIPHER_SUITE(0xCC, 0xAE),

} tls_cipher_suite;

typedef enum _tls_signature_scheme
{
	TLS_RSA_PKCS_SHA1 = 0x0201,
	TLS_DSA_SHA1 = 0x0202,
	TLS_ECDSA_SHA1 = 0x0203,

	TLS_RSA_PKCS_SHA256 = 0x0401,
	TLS_DSA_SHA256 = 0x0402,
	TLS_ECDSA_SECP256R1_SHA256 = 0x0403,

	TLS_RSA_PKCS_SHA384 = 0x0501,
	TLS_DSA_SHA384 = 0x0502,
	TLS_ECDSA_SECP384R1_SHA384 = 0x0503,

	TLS_RSA_PKCS_SHA512 = 0x0601,
	TLS_DSA_SHA512 = 0x0602,
	TLS_ECDSA_SECP521R1_SHA512 = 0x0603,

	TLS_SM2_SM3 = 0x0708,

	TLS_GOST_R34102012_256A = 0x0709,
	TLS_GOST_R34102012_256B = 0x070A,
	TLS_GOST_R34102012_256C = 0x070B,
	TLS_GOST_R34102012_256D = 0x070C,
	TLS_GOST_R34102012_512A = 0x070D,
	TLS_GOST_R34102012_512B = 0x070E,
	TLS_GOST_R34102012_512C = 0x070F,

	TLS_RSA_PSS_RSAE_SHA256 = 0x0804,
	TLS_RSA_PSS_RSAE_SHA384 = 0x0805,
	TLS_RSA_PSS_RSAE_SHA512 = 0x0806,

	TLS_ED25519 = 0x0807,
	TLS_ED448 = 0x0808,

	TLS_RSA_PSS_PSS_SHA256 = 0x0809,
	TLS_RSA_PSS_PSS_SHA384 = 0x080A,
	TLS_RSA_PSS_PSS_SHA512 = 0x080B,

	TLS_ECDSA_BRAINPOOL_P256R1_TLS13_SHA256 = 0x081A,
	TLS_ECDSA_BRAINPOOL_P384R1_TLS13_SHA384 = 0x081B,
	TLS_ECDSA_BRAINPOOL_P512R1_TLS13_SHA512 = 0x081C,

} tls_signature_scheme;

typedef enum _tls_group
{
	TLS_SECT_163K1 = 1,
	TLS_SECT_163R1 = 2,
	TLS_SECT_163R2 = 3,
	TLS_SECT_193R1 = 4,
	TLS_SECT_193R2 = 5,
	TLS_SECT_233K1 = 6,
	TLS_SECT_233R1 = 7,
	TLS_SECT_239K1 = 8,
	TLS_SECT_283K1 = 9,
	TLS_SECT_283R1 = 10,
	TLS_SECT_409K1 = 11,
	TLS_SECT_409R1 = 12,
	TLS_SECT_571K1 = 13,
	TLS_SECT_571R1 = 14,
	TLS_SECP_160K1 = 15,
	TLS_SECP_160R1 = 16,
	TLS_SECP_160R2 = 17,
	TLS_SECP_192K1 = 18,
	TLS_SECP_192R1 = 19,
	TLS_SECP_224K1 = 20,
	TLS_SECP_224R1 = 21,
	TLS_SECP_256K1 = 22,
	TLS_SECP_256R1 = 23,
	TLS_SECP_384R1 = 24,
	TLS_SECP_521R1 = 25,

	TLS_BRAINPOOL_256R1 = 26,
	TLS_BRAINPOOL_384R1 = 27,
	TLS_BRAINPOOL_512R1 = 28,

	TLS_X25519 = 29,
	TLS_X448 = 30,

	TLS_BRAINPOOL_256R1_TLS_13 = 31,
	TLS_BRAINPOOL_384R1_TLS_13 = 32,
	TLS_BRAINPOOL_512R1_TLS_13 = 33,

	TLS_GOST_256A = 34,
	TLS_GOST_256B = 35,
	TLS_GOST_256C = 36,
	TLS_GOST_256D = 37,
	TLS_GOST_512A = 38,
	TLS_GOST_512B = 39,
	TLS_GOST_512C = 40,

	TLS_SM2 = 41,

	TLS_FFDHE_2048 = 256,
	TLS_FFDHE_3072 = 257,
	TLS_FFDHE_4096 = 258,
	TLS_FFDHE_6144 = 259,
	TLS_FFDHE_8192 = 260,

} tls_group;

// RFC 8701: Applying Generate Random Extensions And Sustain Extensibility (GREASE) to TLS Extensibility
#define TLS_MAKE_GREASE_CIPHER_ID(A) (((uint16_t)(A)) << 8 + ((uint16_t)(A)))

static const uint16_t tls_grease_ciphers[16] = {
	TLS_MAKE_GREASE_CIPHER_ID(0x0A), TLS_MAKE_GREASE_CIPHER_ID(0x1A), TLS_MAKE_GREASE_CIPHER_ID(0x2A), TLS_MAKE_GREASE_CIPHER_ID(0x3A),
	TLS_MAKE_GREASE_CIPHER_ID(0x4A), TLS_MAKE_GREASE_CIPHER_ID(0x5A), TLS_MAKE_GREASE_CIPHER_ID(0x6A), TLS_MAKE_GREASE_CIPHER_ID(0x7A),
	TLS_MAKE_GREASE_CIPHER_ID(0x8A), TLS_MAKE_GREASE_CIPHER_ID(0x9A), TLS_MAKE_GREASE_CIPHER_ID(0xAA), TLS_MAKE_GREASE_CIPHER_ID(0xBA),
	TLS_MAKE_GREASE_CIPHER_ID(0xCA), TLS_MAKE_GREASE_CIPHER_ID(0xDA), TLS_MAKE_GREASE_CIPHER_ID(0xEA), TLS_MAKE_GREASE_CIPHER_ID(0xFA),
};

static const uint16_t tls_grease_signatures[16] = {
	0x0A0A, 0x1A1A, 0x2A2A, 0x3A3A, 0x4A4A, 0x5A5A, 0x6A6A, 0x7A7A, 0x8A8A, 0x9A9A, 0xAAAA, 0xBABA, 0xCACA, 0xDADA, 0xEAEA, 0xFAFA,
};

#endif
