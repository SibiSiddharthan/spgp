/*
   Copyright (c) 2024 - 2025 Sibi Siddharthan

   Distributed under the MIT license.
   Refer to the LICENSE file at the root directory for details.
*/

#ifndef TLS_EXTENSIONS_H
#define TLS_EXTENSIONS_H

#include <stdint.h>

typedef enum _tls_extension_type
{
	TLS_SERVER_NAME = 0,
	TLS_MAX_FRAGMENT_LENGTH = 1,
	TLS_CLIENT_CERTIFICATE_URL = 2,
	TLS_TRUSTED_CA_KEYS = 3,
	TLS_TRUNCATED_HMAC = 4,
	TLS_STATUS_REQUEST = 5,
	TLS_USER_MAPPING = 6,
	TLS_CLIENT_AUTHORIZATION = 7,
	TLS_SERVER_AUTHORIZATION = 8,
	TLS_CERTIFICATE_TYPE = 9,
	TLS_SUPPORTED_GROUPS = 10,
	TLS_EC_POINT_FORMATS = 11,
	TLS_SRP = 12,
	TLS_SIGNATURE_ALGORITHMS = 13,
	TLS_USE_SRTP = 14,
	TLS_HEARTBEAT = 15,
	TLS_APPLICATION_LAYER_PROTOCOL_NEGOTIATION = 16,
	TLS_STATUS_REQUEST_V2 = 17,
	TLS_SIGNED_CERTIFICATE_TIMESTAMP = 18,
	TLS_CLIENT_CERTIFICATE_TYPE = 19,
	TLS_SERVER_CERTIFICATE_TYPE = 20,
	TLS_PADDING = 21,
	TLS_ENCRYPT_THEN_MAC = 22,
	TLS_EXTENDED_MASTER_SECRET = 23,
	TLS_TOKEN_BINDING = 24,
	TLS_CACHED_INFO = 25,
	TLS_LTS = 26,
	TLS_COMPRESS_CERTIFICATE = 27,
	TLS_RECORD_SIZE_LIMIT = 28,
	TLS_PASSWORD_PROTECT = 29,
	TLS_PASSWORD_CLEAR = 30,
	TLS_PASSWORD_SALT = 31,
	TLS_TICKET_PINNING = 32,
	TLS_DELEGATED_CREDENTIAL = 34,
	TLS_SESSION_TICKET = 35,
	TLS_PSK = 41,
	TLS_EARLY_DATA = 42,
	TLS_SUPPORTED_VERSIONS = 43,
	TLS_COOKIE = 44,
	TLS_PSK_KEY_EXCHANGE_MODES = 45,
	TLS_CERTIFICATE_AUTHORITIES = 47,
	TLS_OID_FILTERS = 48,
	TLS_POST_HANDSHAKE_AUTH = 49,
	TLS_SIGNATURE_ALGORITHMS_CERTIFICATE = 50,
	TLS_KEY_SHARE = 51,
	TLS_TRANSPARENCY_INFO = 52,
	TLS_CONNECTION_INFO_LEGACY = 53,
	TLS_CONNECTION_INFO = 54,
	TLS_EXTERNAL_ID_HASH = 55,
	TLS_EXTERNAL_SESSION_ID = 56,
} tls_extension_type;

typedef struct _tls_extension
{
	tls_extension_type extension;
	uint16_t size;
	void *data;
} tls_extension;

#endif
